version: "3.0"

services:
  edgeable-api:
    image: edgeable-api-dev
    build:
      context: .
      dockerfile: docker/dashboard/Dockerfile
    ports:
      - "3000:3000"

  edgeable-serverless:
    image: edgeable-severless-dev
    build:
      context: .
      dockerfile: docker/serverless/Dockerfile
    ports:
      - "3001:3000"

  clickhouse:
    container_name: edgeable-clickhouse
    image: clickhouse/clickhouse-server
    ports:
      - "8123:8123"
      - "8000:9000"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - edgeable
    volumes:
      - edgeable-clickhouse:/var/lib/clickhouse

  redis:
    image: redis:7.0.11-alpine
    container_name: edgeable-redis
    restart: unless-stopped
    command: >
    networks:
      - edgeable
    volumes:
      - edgeable-redis:/data:rw

  postgres:
    container_name: postgres
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${_POSTGRES_PASSWORD}
      POSTGRES_USER: ${_POSTGRES_USER}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - edgeable-db:/var/lib/postgresql/data/pgdata
    networks:
      - edgeable
  # For development purposes to impersonate S3 provider.
  minio:
    image: minio/minio
    ports:
      - "9002:9002"
      - "9001:9001"
    volumes:
      - edgeable-minio:/data
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-root}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-supersecret}
    entrypoint: sh
    command: -c 'mkdir -p /data/edgeavle && minio server /data --console-address ":9001" --address ":9002"'

volumes:
  edgeable-redis:
  edgeable-clickhouse:
  edgeable-db:
  edgeable-minio:

networks:
  edgeable: